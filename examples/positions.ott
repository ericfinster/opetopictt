#
#  positions.ott - testing the position universe
#

let pos : U
  = Pos 

let el (P : Pos) : U
  = El P 

# formation rules

let top : Pos
  = ⊤ₚ

let bot : Pos
  = ⊥ₚ

let sum (P : Pos) (Q : Pos) : Pos
  = P ⊔ₚ Q 

let sig (P : Pos) (Q : El P → Pos) : Pos
  = (p : P) ×ₚ Q p 

# intro rules

let tt : El ⊤ₚ
  = ttₚ 

let inl (P : Pos) (Q : Pos) (p : El P) : El (P ⊔ₚ Q)
  = inlₚ p

let inr (P : Pos) (Q : Pos) (q : El Q) : El (P ⊔ₚ Q)
  = inrₚ q

let pair (P : Pos) (Q : El P → Pos)
    (p : El P) (q : El (Q p)) : El ((p : P) ×ₚ Q p)
  = p , q 

# decorations

let pi (P : Pos) (X : El P → U) : U
  = (p : P) →ₚ X p 

let lam (P : Pos) (X : El P → U) (σ : (p : El P) → X p) : (p : P) →ₚ X p
  = λₚ p . σ p

let app (P : Pos) (X : El P → U) (σ : (p : P) →ₚ X p) (p : El P) : X p
  = σ @ p

# elim rules 

let bot-elim (X : El ⊥ₚ → U) : (b : ⊥ₚ) →ₚ X b
  = ⊥-elim 

let top-elim (X : El ⊤ₚ → U) (x : X ttₚ) : (u : ⊤ₚ) →ₚ X u
  = ⊤-elim x
    
let sum-elim (P : Pos) (Q : Pos)
    (X : El (P ⊔ₚ Q) → U)
    (l : (p : P) →ₚ X (inlₚ p))
    (r : (q : Q) →ₚ X (inrₚ q))
  : (pq : P ⊔ₚ Q) →ₚ X pq
  = ⊔-elim l r 

let sig-elim (P : Pos) (Q : El P → Pos)
    (X : El ((p : P) ×ₚ Q p) → U)
    (σ : (p : P) →ₚ (q : Q p) →ₚ X (p , q))
  : (pq : (p : P) ×ₚ Q p) →ₚ X pq
  = ×-elim σ
