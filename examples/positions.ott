#
#  positions.ott - testing the position universe
#

let pos : U
  = Pos 

let el (P : Pos) : U
  = El P 

let top : Pos
  = ⊤ₚ

let bot : Pos
  = ⊥ₚ

let sum (P : Pos) (Q : Pos) : Pos
  = P ⊔ₚ Q 

let sig (P : Pos) (Q : El P → Pos) : Pos
  = (p : P) ×ₚ Q p 

let tt : El ⊤ₚ
  = ttₚ 

let inl (P : Pos) (Q : Pos) (p : El P) : El (P ⊔ₚ Q)
  = inlₚ p

let inr (P : Pos) (Q : Pos) (q : El Q) : El (P ⊔ₚ Q)
  = inrₚ q

let pair (P : Pos) (Q : El P → Pos)
    (p : El P) (q : El (Q p)) : El ((p : P) ×ₚ Q p)
  = p , q 

let pi (P : Pos) (X : El P → U) : U
  = (p : P) →ₚ X p 
