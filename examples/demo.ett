#
#  demo.ett - some samples of erictt
#

# let id (A : U) (a : A) : A = a

let List : U -> U
  = \A. (L : U) -> (A -> L -> L) -> L -> L

let nil : (A : _) -> List A
  = \A. \L. \cons. \nil. nil

let cons : (A : _) -> A -> List A -> List A
  = \A. \x. \xs. \L. \cons. \nil. cons x (xs _ cons nil)


