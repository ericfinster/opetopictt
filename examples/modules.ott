#
# modules.ott - testing modules
#

let module Bleep (A : U) = begin 

  let id (a : A) : A = a
  let id2 (a : A) : A = id a 

end 

let id3 (A : U) (a : A) : A =
  Bleep.id a


let module Eric (A : U) (B : A → U) = begin

  let fred (C : (a : A) (b : B a) → U) : U =
  

end

let module Fred (A : U) = Eric A

let module Eric = with (A : U) define

    let ...
    let ...

  end 


let module Top = begin 

end 

let module Eric = suppose (A : U) (B : A → U) in begin 

end

let module Fred = suppose (A : U) in Eric A 


